--For this project, I downloaded Spotify data from Kaggle.
--Then I created a table to insert Spotify data into.
--Finally, I performed analytics on the data using SQL. 

--Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

--Then I inserted the Spotify Data .csv into the table.

--Next, I explored the data using the following SQL. 

-- #1 What is the average danceability by artists who's average danceability is above or equal to 0.5
SELECT artist_name, 
AVG(danceability) AS [Average Danceability]
FROM BIT_DB.Spotifydata
GROUP BY  artist_name
Having [Average Danceability] >= 0.5
Order by [Average Danceability] DESC

-- #2 What are the names of the artists that released the 5 most popular songs?
SELECT artist_name, 
track_name
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 5

--  #3 Calculate the average popularity for the artists in the Spotify data table. 
--Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.
WITH average_pop AS (
SELECT s.artist_name,
AVG(s.popularity) AS average_popularity
FROM SpotifyData s 
GROUP BY s.artist_name
) 
SELECT artist_name,
average_popularity,
'Top Star' AS tag
FROM average_pop
WHERE average_popularity>=90
